# -*- coding: utf-8 -*-
"""dados_congresso.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iN4S44BQTf2OvJYhKm482zMUtP4Q3phu
"""

!pip install quickda

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
# %matplotlib inline
from quickda.explore_data import *
import altair as alt

df = pd.read_csv('Ano_2021.csv', sep=";")

df

df['txtDescricao'].unique()

"""## Dados gerais

"""

plt.figure(figsize=(20,10))
sns.boxplot(x='vlrDocumento',
            y='txtDescricao',
            data=df)
plt.show()

df_unificado_mes = df.groupby(['txNomeParlamentar', 'sgUF', 'sgPartido', 'txtDescricao'])[['vlrDocumento']].sum().reset_index()
df_unificado_mes

plt.figure(figsize=(20,10))
sns.boxplot(x='vlrDocumento',
            y='txtDescricao',
            data=df_unificado_mes)

"""# Divulgação parlamentar"""

divulga = df.query('txtDescricao =="DIVULGAÇÃO DA ATIVIDADE PARLAMENTAR."')

divulga_caro = divulga.query('vlrDocumento > 40000')
divulga_caro

divulga['sgPartido'].unique()

"""# Dados unificados por deputado"""

df_dep = df[df['txtDescricao']== 'DIVULGAÇÃO DA ATIVIDADE PARLAMENTAR.'].groupby(['txNomeParlamentar', 'sgUF', 'sgPartido', 'txtDescricao'])[['vlrDocumento']].sum()
df_dep.sort_values('vlrDocumento')

sns.boxplot(x='vlrDocumento',
            data=df_dep)

df_dep_out = df_dep.query('vlrDocumento > 200000')
df_dep_out

df_teste = df_dep.query('sgPartido == "PSOL"')
explore(df_teste, method='summarize')
df_teste

"""# Por partidos"""

df_div_sg = df_dep.groupby('sgPartido')[['vlrDocumento']].mean()
explore(df_div_sg, method='summarize')

sns.boxplot(x='vlrDocumento',
            data=df_div_sg)

df_div_sg

"""# SERVIÇO DE SEGURANÇA PRESTADO POR EMPRESA ESPECIALIZADA."""

df_aeronaves = df_unificado_mes.query('txtDescricao == "SERVIÇO DE SEGURANÇA PRESTADO POR EMPRESA ESPECIALIZADA."')
df_aeronaves.sort_values('vlrDocumento')

"""# alimentação"""

df_comida_unitaria = df.query('txtDescricao =="FORNECIMENTO DE ALIMENTAÇÃO DO PARLAMENTAR"')
df_comida_unitaria = df_comida_unitaria[df_comida_unitaria["txNomeParlamentar"].str.contains('LIDERANÇA|LIDMIN') == False]


df_comida_unitaria = df_comida_unitaria.drop(columns= ['cpf','ideCadastro', 'nuCarteiraParlamentar',
       'nuLegislatura', 'codLegislatura',
       'numSubCota', 'numEspecificacaoSubCota',
       'txtDescricaoEspecificacao', 'txtFornecedor', 'txtCNPJCPF',
       'txtNumero', 'indTipoDocumento', 'datEmissao',
       'vlrGlosa', 'vlrLiquido', 'numMes', 'numAno', 'numParcela',
       'txtPassageiro', 'txtTrecho', 'numLote', 'ideDocumento', 'numRessarcimento', 'vlrRestituicao'])
df_comida_unitaria

sns.boxplot(x='vlrDocumento',
            data=df_comida_unitaria)

df_comida_unitaria = df_comida_unitaria.query('vlrDocumento > 160')
pd.set_option('display.max_colwidth', None)
df_comida_unitaria.sort_values('vlrDocumento')

"""# Unificado"""

df_dep_alimentacao = df_unificado_mes.query('txtDescricao == "FORNECIMENTO DE ALIMENTAÇÃO DO PARLAMENTAR"')
df_dep_alimentacao.sort_values('vlrDocumento')

sns.boxplot(x='vlrDocumento',
            data=df_dep_alimentacao)

df_dep_alimentacao = df_dep_alimentacao.query('vlrDocumento > 4000')
df_dep_alimentacao.sort_values('vlrDocumento')

"""# **Senado**"""

df_senado = pd.read_csv('despesa_ceaps_2021.csv', sep="\t", encoding='iso-8859-1')
df_senado.reset_index()

df_senado['VALOR_REEMBOLSADO'] = pd.to_numeric(df_senado['VALOR_REEMBOLSADO'], errors='coerce')
df_senado.columns.values

plt.figure(figsize=(20,10))
sns.boxplot(x='VALOR_REEMBOLSADO',
            y='TIPO_DESPESA',
            data=df_senado)
plt.show()

df_senado_uni = df_senado.groupby(['SENADOR', 'TIPO_DESPESA', 'DETALHAMENTO', 'VALOR_REEMBOLSADO', 'COD_DOCUMENTO'], as_index=False)[['VALOR_REEMBOLSADO']].sum()
df_senado_uni

df_senado_uni['VALOR_REEMBOLSADO'] = pd.to_numeric(df_senado['VALOR_REEMBOLSADO'], errors='coerce')

plt.figure(figsize=(20,10))
sns.boxplot(x='VALOR_REEMBOLSADO',
            y='TIPO_DESPESA',
            data=df_senado_uni)
plt.show()